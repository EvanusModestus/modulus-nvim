-- ============================================================================
-- ENHANCED OBSIDIAN TEMPLATE SNIPPETS FOR AETHELRED-CODEX
-- ============================================================================
-- Dependencies: LuaSnip (snippet engine)
-- ============================================================================

local M = {}

-- ============================================================================
-- HELPER FUNCTIONS
-- ============================================================================

local function generate_uuid()
    math.randomseed(os.time() + os.clock() * 1000000)
    local template = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'
    return template:gsub('[xy]', function(c)
        local v = (c == 'x') and math.random(0, 0xf) or math.random(8, 0xb)
        return string.format('%x', v)
    end)
end

local function get_date()
    return os.date('%Y-%m-%d')
end

local function get_year()
    return os.date('%Y')
end

local function get_quarter()
    local month = tonumber(os.date('%m'))
    local quarter = math.floor((month - 1) / 3 + 1)
    return 'Q' .. quarter
end

local function get_week()
    return os.date('Week %W, %Y')
end

-- ============================================================================
-- MAIN SETUP FUNCTION
-- ============================================================================

function M.setup()
    local ls = require('luasnip')
    local s = ls.snippet
    local t = ls.text_node
    local i = ls.insert_node
    local f = ls.function_node
    local c = ls.choice_node

    ls.add_snippets('markdown', {

        -- ====================================================================
        -- HIERARCHICAL WORK LOG (NEW)
        -- ====================================================================
        -- Trigger: "worklog" - Complete hierarchical work log
        -- Structure: Summary Table ‚Üí Categories ‚Üí Detailed Cases ‚Üí Technical Details
        -- ====================================================================
        s('worklog', {
            t({ '---',
                'document_uuid: "' }),
            f(function() return generate_uuid() end),
            t({ '"',
                'id: "' }),
            f(function() return os.date('%Y') end),
            t('-WL-'),
            f(function() return os.date('%m%d') end),
            t({ '"',
                'title: "Daily Work Log - ' }),
            f(function() return os.date('%B %d, %Y') end),
            t({ '"',
                'category: "tabularium"',
                'subcategory: "daily_captures"',
                'type: "work_log"',
                'date: "' }),
            f(function() return os.date('%Y-%m-%d') end),
            t({ '"',
                'date_created: "' }),
            f(function() return os.date('%Y-%m-%d') end),
            t({ '"',
                'date_modified: "' }),
            f(function() return os.date('%Y-%m-%d') end),
            t({ '"',
                'author: "' }),
            i(1, 'Your Name'),
            t({ '"',
                'team: "' }),
            i(2, 'Your Team'),
            t({ '"',
                'tags: [' }),
            i(3, '"work_log", "network", "infosec"'),
            t({ ']',
                '---',
                '',
                '# Daily Work Log - ' }),
            f(function() return os.date('%B %d, %Y') end),
            t({ '',
                '',
                '## üìã Tasks & Activities Summary',
                '',
                '| Time  | Activity Type       | Description                           | Status                                 | Notes                                                                |',
                '| ----- | ------------------- | ------------------------------------- | -------------------------------------- | -------------------------------------------------------------------- |',
                '| ' }),
            i(4, '09:00'),
            t(' | '),
            i(5, 'Activity Type'),
            t(' | '),
            i(6, 'Description'),
            t(' | '),
            i(7, 'Status'),
            t(' | '),
            i(8, 'Notes'),
            t({ ' |',
                '',
                '## ü§ù Technical Meetings & Collaboration',
                '',
                '### ' }),
            i(9, 'Meeting Title'),
            t({ '',
                '',
                '#### Meeting Details',
                '',
                '    **Time:** ' }),
            i(10, '10:00'),
            t({ '',
                '    **Type:** ' }),
            i(11, 'Meeting Type'),
            t({ '',
                '    **Attendees:** ' }),
            i(12, 'Attendees'),
            t({ '',
                '    **Status:** ' }),
            i(13, 'Completed'),
            t({ '',
                '',
                '#### Purpose',
                '',
                '    ' }),
            i(14, 'Meeting purpose'),
            t({ '',
                '',
                '#### Discussion Topics',
                '',
                '    - ' }),
            i(15, 'Topic 1'),
            t({ '',
                '',
                '#### Outcome',
                '',
                '    - ' }),
            i(16, 'Outcome'),
            t({ '',
                '',
                '## üîß Troubleshooting & Support Cases',
                '',
                '### Case 1: ' }),
            i(17, 'Issue Title'),
            t({ '',
                '',
                '#### Case Summary',
                '',
                '    **Time:** ' }),
            f(function() return os.date('%H:%M') end),
            t({ '',
                '    **Requestor:** ' }),
            i(18, 'Name'),
            t({ '',
                '    **Device:** ' }),
            i(19, 'Device Info'),
            t({ '',
                '    **Location:** ' }),
            i(20, 'Location'),
            t({ '',
                '',
                '#### Initial Problem',
                '',
                '    ' }),
            i(21, 'Problem description'),
            t({ '',
                '',
                '#### Investigation Results',
                '',
                '    ' }),
            i(22, 'Investigation findings'),
            t({ '',
                '',
                '#### Root Cause Analysis',
                '',
                '    1. ' }),
            i(23, 'Root cause'),
            t({ '',
                '',
                '#### Resolution Applied',
                '',
                '    ```bash',
                '    ' }),
            i(24, '# Commands or configuration'),
            t({ '',
                '    ```',
                '',
                '#### Follow-up Actions',
                '',
                '    - [ ] ' }),
            i(25, 'Action item'),
            t({ '',
                '',
                '#### Outcome',
                '',
                '    ' }),
            i(26, 'Final outcome'),
            t({ '',
                '',
                '## üî¨ Lab Projects',
                '',
                '### ' }),
            i(27, 'Project Name'),
            t({ '',
                '',
                '#### Project Overview',
                '',
                '    **Status:** ' }),
            c(28, { t('Pending'), t('In Progress'), t('Completed') }),
            t({ '',
                '    **Objective:** ' }),
            i(29, 'Project objective'),
            t({ '',
                '',
                '#### Tasks',
                '',
                '    - [ ] ' }),
            i(30, 'Task 1'),
            t({ '',
                '',
                '## üîß Network Device Changes',
                '',
                '### ' }),
            i(31, 'Change Description'),
            t({ '',
                '',
                '#### Project Details',
                '',
                '    **Initiated by:** ' }),
            i(32, 'Name'),
            t({ '',
                '    **Issue:** ' }),
            i(33, 'Issue description'),
            t({ '',
                '    **Solution:** ' }),
            i(34, 'Solution'),
            t({ '',
                '',
                '## üìù Notes & Follow-ups',
                '',
                '### Immediate Actions',
                '',
                '    - [ ] ' }),
            i(35, 'Action'),
            t({ '',
                '',
                '### End of Day Tasks',
                '',
                '    - [ ] ' }),
            i(36, 'Task'),
            t({ '',
                '',
                '### Future Tasks',
                '',
                '    - [ ] ' }),
            i(37, 'Future task'),
            t({ '',
                '',
                '## ‚è±Ô∏è Time Summary',
                '',
                '| Category                      | Time Spent | Details                                                    |',
                '|-------------------------------|------------|------------------------------------------------------------|',
                '| ' }),
            i(38, 'Category'),
            t(' | '),
            i(39, 'Time'),
            t(' | '),
            i(40, 'Details'),
            t({ ' |',
                '',
                '## üè∑Ô∏è Tags & Cross-References',
                '',
                '### Related Systems',
                '',
                '    - ' }),
            i(41, 'System 1'),
            t({ '',
                '',
                '### Related Processes',
                '',
                '    - ' }),
            i(42, 'Process 1'),
            t({ '',
                '',
                '### Related Teams',
                '',
                '    - ' }),
            i(43, 'Team 1'),
            t({ '',
                '',
                '## üìö Knowledge Base Entries Created',
                '',
                '### KB-' }),
            i(44, '001'),
            t(': '),
            i(45, 'KB Title'),
            t({ '',
                '',
                '    **Issue:** ' }),
            i(46, 'Issue'),
            t({ '',
                '    **Cause:** ' }),
            i(47, 'Cause'),
            t({ '',
                '    **Solution:** ' }),
            i(48, 'Solution'),
            t({ '',
                '    **Impact:** ' }),
            i(0, 'Impact'),
        }),

        -- ====================================================================
        -- HIERARCHICAL CASE DOCUMENTATION (NEW)
        -- ====================================================================
        -- Trigger: "case-full" - Complete troubleshooting case with hierarchy
        -- ====================================================================
        s('case-full', {
            t({ '### Case: ' }),
            i(1, 'Issue Title'),
            t({ '',
                '',
                '#### Case Summary',
                '',
                '    **Time:** ' }),
            f(function() return os.date('%H:%M') end),
            t({ '',
                '    **Requestor:** ' }),
            i(2, 'Name (Team)'),
            t({ '',
                '    **Device:** ' }),
            i(3, 'Device Type/Model'),
            t({ '',
                '    **Location:** ' }),
            i(4, 'Physical Location'),
            t({ '',
                '    **Priority:** ' }),
            c(5, { t('High'), t('Medium'), t('Low'), t('Critical') }),
            t({ '',
                '',
                '#### Initial Problem',
                '',
                '    ' }),
            i(6, 'Describe the problem as initially reported'),
            t({ '',
                '',
                '#### Investigation Results',
                '',
                '##### ' }),
            i(7, 'Investigation Area 1'),
            t({ '',
                '',
                '    ```',
                '    ' }),
            i(8, 'Status or command output'),
            t({ '',
                '    ```',
                '',
                '##### ' }),
            i(9, 'Investigation Area 2'),
            t({ '',
                '',
                '    ```bash',
                '    ' }),
            i(10, '# Commands used'),
            t({ '',
                '    ```',
                '',
                '#### Root Cause Analysis',
                '',
                '    1. ' }),
            i(11, 'Finding 1 ‚úÖ or ‚ùå'),
            t({ '',
                '    2. ' }),
            i(12, 'Finding 2 ‚úÖ or ‚ùå'),
            t({ '',
                '    3. **PROBLEM:** ' }),
            i(13, 'Root cause identified ‚ùå'),
            t({ '',
                '',
                '#### Resolution Applied',
                '',
                '    ```bash',
                '    ' }),
            i(14, '# Configuration changes or fix commands'),
            t({ '',
                '    ```',
                '',
                '##### Key Changes',
                '',
                '    | Feature                     | Before | After |',
                '    |-----------------------------|--------|-------|',
                '    | ' }),
            i(15, 'Feature'),
            t(' | '),
            i(16, 'Old'),
            t(' | '),
            i(17, 'New'),
            t({ ' |',
                '',
                '#### Post-Implementation Status',
                '',
                '    ```',
                '    ' }),
            i(18, 'Status after fix'),
            t({ '',
                '    ```',
                '',
                '#### Follow-up Actions',
                '',
                '    - [ ] ' }),
            i(19, 'Action item 1'),
            t({ '',
                '    - [ ] ' }),
            i(20, 'Action item 2'),
            t({ '',
                '',
                '#### Outcome',
                '',
                '    ' }),
            i(0, 'Final outcome and next steps'),
        }),

        -- ====================================================================
        -- MEETING SECTION (NEW - Hierarchical)
        -- ====================================================================
        -- Trigger: "meeting-section"
        -- ====================================================================
        s('meeting-section', {
            t({ '### ' }),
            i(1, 'Meeting Title'),
            t({ '',
                '',
                '#### Meeting Details',
                '',
                '    **Time:** ' }),
            i(2, '10:00'),
            t({ '',
                '    **Type:** ' }),
            c(3, {
                t('Recurring Weekly Engineering Call'),
                t('Internal Collaboration'),
                t('Technical Planning'),
                t('Stakeholder Review'),
                t('Emergency Response')
            }),
            t({ '',
                '    **Attendees:** ' }),
            i(4, 'Team members, vendors, stakeholders'),
            t({ '',
                '    **Status:** ' }),
            c(5, { t('Completed'), t('In Progress'), t('Scheduled'), t('Cancelled') }),
            t({ '',
                '',
                '#### Purpose',
                '',
                '    ' }),
            i(6, 'Meeting purpose and objectives'),
            t({ '',
                '',
                '#### Discussion Topics',
                '',
                '    - ' }),
            i(7, 'Topic 1'),
            t({ '',
                '    - ' }),
            i(8, 'Topic 2'),
            t({ '',
                '',
                '#### Key Decisions',
                '',
                '    - ' }),
            i(9, 'Decision 1'),
            t({ '',
                '',
                '#### Action Items',
                '',
                '    - [ ] [' }),
            i(10, 'Owner'),
            t('] - '),
            i(11, 'Action item'),
            t({ '',
                '',
                '#### Outcome',
                '',
                '    ' }),
            i(0, 'Meeting outcome and next steps'),
        }),

        -- ====================================================================
        -- PROJECT SECTION (NEW - Hierarchical)
        -- ====================================================================
        -- Trigger: "project-section"
        -- ====================================================================
        s('project-section', {
            t({ '### ' }),
            i(1, 'Project Name'),
            t({ '',
                '',
                '#### Project Overview',
                '',
                '    **Status:** ' }),
            c(2, { t('Pending'), t('Planning'), t('In Progress'), t('Testing'), t('Deployed'), t('Completed') }),
            t({ '',
                '    **Objective:** ' }),
            i(3, 'What this project aims to accomplish'),
            t({ '',
                '    **Use Case:** ' }),
            i(4, 'Primary use case or business need'),
            t({ '',
                '',
                '#### Implementation Details',
                '',
                '    - **Platform:** ' }),
            i(5, 'Technology/Platform'),
            t({ '',
                '    - **Documentation:** ' }),
            i(6, 'URL or reference'),
            t({ '',
                '    - **Environment:** ' }),
            c(7, { t('Lab'), t('Staging'), t('Production') }),
            t({ '',
                '    - **Integration:** ' }),
            i(8, 'What systems this integrates with'),
            t({ '',
                '',
                '#### Technical Overview',
                '',
                '    ' }),
            i(9, 'Technical explanation of how this works'),
            t({ '',
                '',
                '#### Tasks',
                '',
                '    - [ ] ' }),
            i(10, 'Task 1'),
            t({ '',
                '    - [ ] ' }),
            i(11, 'Task 2'),
            t({ '',
                '',
                '#### Reference Documentation',
                '',
                '    - ' }),
            i(0, 'Links to relevant documentation'),
        }),

        -- ====================================================================
        -- DEVICE CHANGE SECTION (NEW - Hierarchical)
        -- ====================================================================
        -- Trigger: "device-change"
        -- ====================================================================
        s('device-change', {
            t({ '### ' }),
            i(1, 'Device Change Description'),
            t({ '',
                '',
                '#### Project Details',
                '',
                '    **Initiated by:** ' }),
            i(2, 'Person (via Teams/Email/Ticket)'),
            t({ '',
                '    **Vendor:** ' }),
            i(3, 'Vendor name if applicable'),
            t({ '',
                '    **Issue:** ' }),
            i(4, 'Problem or need driving this change'),
            t({ '',
                '    **Solution:** ' }),
            i(5, 'How the issue is being resolved'),
            t({ '',
                '    **Process:** ' }),
            i(6, 'Workflow description'),
            t({ '',
                '',
                '#### Teams Message Transaction',
                '',
                '    ```structure',
                '    [Requestor]: ' }),
            i(7, 'Initial message'),
            t({ '',
                '',
                '    [You]: ' }),
            i(8, 'Your response'),
            t({ '',
                '    ```',
                '',
                '#### Device/Change Tracking',
                '',
                '    | # | Identifier | Details | Status  | Time | Notes |',
                '    |---|------------|---------|---------|------|-------|',
                '    | 1 | ' }),
            i(9, 'ID/MAC/Name'),
            t(' | '),
            i(10, 'Details'),
            t(' | '),
            c(11, { t('Added'), t('Pending'), t('Completed'), t('Failed') }),
            t(' | '),
            f(function() return os.date('%H:%M') end),
            t(' | '),
            i(12, 'Notes'),
            t({ ' |',
                '',
                '#### Key Decision Points',
                '',
                '    - ' }),
            i(13, 'Important decision or process note'),
            t({ '',
                '',
                '#### Important Note',
                '',
                '    ' }),
            i(0, 'Critical information or follow-up needed'),
        }),

        -- ====================================================================
        -- KNOWLEDGE BASE ENTRY (NEW - Hierarchical)
        -- ====================================================================
        -- Trigger: "kb-entry"
        -- ====================================================================
        s('kb-entry', {
            t({ '### KB-' }),
            i(1, '001'),
            t(': '),
            i(2, 'Knowledge Base Title'),
            t({ '',
                '',
                '    **Issue:** ' }),
            i(3, 'Description of the problem'),
            t({ '',
                '    **Cause:** ' }),
            i(4, 'Root cause explanation'),
            t({ '',
                '    **Solution:** ' }),
            i(5, 'How to fix it'),
            t({ '',
                '    **Impact:** ' }),
            i(6, 'What this affects or improves'),
            t({ '',
                '    **Configuration:**',
                '',
                '    ```bash',
                '    ' }),
            i(7, '# Commands or configuration'),
            t({ '',
                '    ```',
                '',
                '    **Related:** ' }),
            i(0, 'Related systems, tickets, or documentation'),
        }),

        -- ====================================================================
        -- QUICK HIERARCHY BUILDERS (NEW)
        -- ====================================================================

        -- Quick case template
        s('case-quick', {
            t({ '### Case: ' }),
            i(1, 'Issue'),
            t({ '',
                '',
                '**Problem:** ' }),
            i(2, 'What happened'),
            t({ '',
                '**Investigation:** ' }),
            i(3, 'What you found'),
            t({ '',
                '**Root Cause:** ' }),
            i(4, 'Why it happened'),
            t({ '',
                '**Fix:** ' }),
            i(5, 'How you fixed it'),
            t({ '',
                '**Outcome:** ' }),
            i(0, 'Result'),
        }),

        -- Summary table row
        s('task-row', {
            t('| '),
            f(function() return os.date('%H:%M') end),
            t(' | '),
            i(1, 'Activity Type'),
            t(' | '),
            i(2, 'Description'),
            t(' | '),
            c(3, { t('Completed'), t('In Progress'), t('Pending'), t('Blocked') }),
            t(' | '),
            i(0, 'Notes'),
            t(' |'),
        }),

        -- Device tracking row
        s('device-row', {
            t('    | '),
            i(1, '1'),
            t(' | '),
            i(2, 'Identifier'),
            t(' | '),
            i(3, 'Details'),
            t(' | '),
            c(4, { t('Added'), t('Pending'), t('Completed'), t('Failed') }),
            t(' | '),
            f(function() return os.date('%H:%M') end),
            t(' | '),
            i(0, 'Notes'),
            t(' |'),
        }),

        -- Time summary row
        s('time-row', {
            t('| '),
            i(1, 'Category'),
            t(' | '),
            i(2, 'Time'),
            t(' | '),
            i(0, 'Details'),
            t(' |'),
        }),

        -- Investigation finding
        s('finding', {
            t('    '),
            i(1, '1'),
            t('. '),
            i(2, 'Finding description'),
            t(' '),
            c(0, { t('‚úÖ'), t('‚ùå'), t('‚ö†Ô∏è') }),
        }),

        -- Action checkbox with indentation
        s('action', {
            t('    - [ ] '),
            i(0),
        }),

        -- Code block with indentation
        s('code-indent', {
            t({ '    ```' }),
            i(1, 'bash'),
            t({ '',
                '    ' }),
            i(2, '# Code here'),
            t({ '',
                '    ```' }),
            i(0),
        }),

        -- Status indicator
        s('status', {
            t('**Status:** '),
            c(0, {
                t('Completed ‚úÖ'),
                t('In Progress üîÑ'),
                t('Pending ‚è≥'),
                t('Blocked üö´'),
                t('Failed ‚ùå')
            }),
        }),

        -- ====================================================================
        -- UNIVERSAL YAML FRONTMATTER (ORIGINAL)
        -- ====================================================================
        -- Trigger: "yaml" - Adapts to any document type
        -- ====================================================================
        s('yaml', {
            t({ '---',
                'document_uuid: "' }),
            f(function() return generate_uuid() end),
            t({ '"',
                'id: "' }),
            i(1, '2025-XXX-001'),
            t({ '"',
                'title: "' }),
            i(2, 'Document Title'),
            t({ '"',
                'description: "' }),
            i(3, 'Brief description'),
            t({ '"',
                'category: "' }),
            c(4, {
                t('projects'),
                t('operations'),
                t('incident_response'),
                t('learning'),
                t('architecture'),
                t('documentation')
            }),
            t({ '"',
                'type: "' }),
            i(5, 'document-type'),
            t({ '"',
                'status: "' }),
            c(6, { t('active'), t('planning'), t('completed'), t('archived') }),
            t({ '"',
                'priority: "' }),
            c(7, { t('P1-High'), t('P2-Medium'), t('P3-Low') }),
            t({ '"',
                'tags:',
                '  - "' }),
            i(8, 'tag1'),
            t({ '"',
                '  - "' }),
            i(9, 'tag2'),
            t({ '"',
                'date_created: "' }),
            f(function() return os.date('%Y-%m-%d') end),
            t({ '"',
                'date_modified: "' }),
            f(function() return os.date('%Y-%m-%d') end),
            t({ '"',
                '---',
                '',
                '' }),
            i(0),
        }),

        -- ====================================================================
        -- ENTERPRISE PROJECT TEMPLATE (ORIGINAL)
        -- ====================================================================
        -- Trigger: "project-full" - Complete ISE/Infrastructure project
        -- ====================================================================
        s('project-full', {
            t({ '---',
                'document_uuid: "' }),
            f(function() return generate_uuid() end),
            t({ '"',
                'project_uuid: "' }),
            f(function() return generate_uuid() end),
            t({ '"',
                'id: ' }),
            f(function() return os.date('%Y') end),
            t('-'),
            i(1, 'ISE'),
            t('-'),
            i(2, 'PROJECT'),
            t('-'),
            i(3, '001'),
            t({ '',
                'title: ' }),
            i(4, 'Project Title'),
            t({ '',
                'description: ' }),
            i(5, 'Project description with technical details'),
            t({ '',
                'category: projects',
                'subcategory: ' }),
            c(6, { t('infrastructure'), t('security'), t('network'), t('cloud') }),
            t({ '',
                'type: ' }),
            c(7, { t('network-security'), t('infrastructure'), t('automation'), t('integration') }),
            t({ '',
                'status: ' }),
            c(8, { t('active'), t('planning'), t('on-hold'), t('completed') }),
            t({ '',
                'priority: ' }),
            c(9, { t('P1-High'), t('P2-Medium'), t('P3-Low') }),
            t({ '',
                'progress: ' }),
            i(10, '0'),
            t({ '',
                'project_phase: ' }),
            c(11, { t('Planning'), t('Execution'), t('Testing'), t('Deployment'), t('Closed') }),
            t({ '',
                'risk_level: ' }),
            c(12, { t('Low'), t('Medium'), t('High') }),
            t({ '',
                'compliance_requirements:',
                '  - ' }),
            i(13, 'HIPAA'),
            t({ '',
                '  - ' }),
            i(14, 'Network Segmentation'),
            t({ '',
                'business_criticality: ' }),
            c(15, { t('High'), t('Medium'), t('Low') }),
            t({ '',
                'estimated_completion: ' }),
            f(function() return os.date('%Y') end),
            t('-'),
            f(function() return get_quarter() end),
            t({ '',
                'technology_stack:',
                '  - ' }),
            i(16, 'Cisco ISE 3.2'),
            t({ '',
                '  - ' }),
            i(17, 'Technology 2'),
            t({ '',
                'integration_points:',
                '  - ' }),
            i(18, 'Integration Point 1'),
            t({ '',
                '  - ' }),
            i(19, 'Integration Point 2'),
            t({ '',
                'dependencies:',
                '  - ' }),
            i(20, 'Dependency 1'),
            t({ '',
                '  - "[[' }),
            i(21, 'Related-Project'),
            t({ ']]"',
                'assets_path: "[[' }),
            i(22, 'PROJECT-ASSETS'),
            t({ ']]"',
                'tags:',
                '  - infrastructure',
                '  - project',
                '  - ' }),
            i(23, 'custom-tag'),
            t({ '',
                'health: ' }),
            c(24, { t('GREEN'), t('YELLOW'), t('RED') }),
            t({ '',
                'investment: ' }),
            c(25, { t('high'), t('medium'), t('low') }),
            t({ '',
                'roi: ' }),
            c(26, { t('high'), t('medium'), t('low') }),
            t({ '',
                'date_created: ' }),
            f(function() return os.date('%Y-%m-%d') end),
            t({ '',
                'date_modified: ' }),
            f(function() return os.date('%Y-%m-%d') end),
            t({ '',
                'owner: "' }),
            i(27, 'Team Name'),
            t({ '"',
                'contributors: []',
                '---',
                '',
                '# ' }),
            i(28, 'Project Title'),
            t({ '',
                '',
                '## üìã Executive Summary',
                '',
                '' }),
            i(29, 'High-level project overview and business value'),
            t({ '',
                '',
                '## üéØ Objectives',
                '',
                '' }),
            i(30, 'Key objectives and success criteria'),
            t({ '',
                '',
                '## üèóÔ∏è Architecture',
                '',
                '```mermaid',
                'graph LR',
                '    A[Component 1] --> B[Component 2]',
                '```',
                '',
                '## üìä Current Status',
                '',
                '**Progress**: ' }),
            i(31, '0'),
            t({ '%',
                '',
                '' }),
            i(0),
        }),

        -- ====================================================================
        -- COMMAND ARSENAL TEMPLATE (ORIGINAL)
        -- ====================================================================
        -- Trigger: "cmd-full" - Full command documentation
        -- ====================================================================
        s('cmd-full', {
            t({ '---',
                'document_uuid: "' }),
            f(function() return generate_uuid() end),
            t({ '"',
                'id: "' }),
            f(function() return os.date('%Y') end),
            t('-CMD-'),
            i(1, '001'),
            t({ '"',
                'title: "' }),
            i(2, 'Command Title'),
            t({ '"',
                'description: "' }),
            i(3, 'What this command does'),
            t({ '"',
                'category: "command"',
                'type: "command"',
                'command_category: "' }),
            c(4, {
                t('01_DAILY_OPERATIONS'),
                t('02_FILE_MANAGEMENT'),
                t('03_SYSTEM_ADMIN'),
                t('04_CLOUD_PLATFORMS'),
                t('05_CONTAINER_ECOSYSTEM'),
                t('06_NETWORKING'),
                t('07_SECURITY'),
                t('14_KUBERNETES'),
                t('16_TROUBLESHOOTING')
            }),
            t({ '"',
                'complexity: "' }),
            c(5, { t('basic'), t('intermediate'), t('advanced'), t('expert') }),
            t({ '"',
                'platforms:',
                '  - "' }),
            c(6, { t('linux'), t('windows'), t('macos'), t('cloud') }),
            t({ '"',
                'tags:',
                '  - "command"',
                '  - "' }),
            i(7, 'tag1'),
            t({ '"',
                'date_created: "' }),
            f(function() return os.date('%Y-%m-%d') end),
            t({ '"',
                'date_modified: "' }),
            f(function() return os.date('%Y-%m-%d') end),
            t({ '"',
                'personal_rating: ' }),
            c(8, { t('5'), t('4'), t('3'), t('2'), t('1') }),
            t({ '',
                'success_rate: ' }),
            i(9, '0.95'),
            t({ '',
                'risk_level: "' }),
            c(10, { t('low'), t('medium'), t('high') }),
            t({ '"',
                '---',
                '',
                '# ' }),
            i(11, 'Command Title'),
            t({ '',
                '',
                '## üéØ Quick Reference',
                '',
                '```bash',
                '' }),
            i(12, 'command --option value'),
            t({ '',
                '```',
                '',
                '## üìù Description',
                '',
                '' }),
            i(13, 'Detailed explanation of what this command accomplishes'),
            t({ '',
                '',
                '## üöÄ Basic Usage',
                '',
                '### Syntax',
                '```bash',
                '' }),
            i(14, 'command [OPTIONS] [ARGUMENTS]'),
            t({ '',
                '```',
                '',
                '### Example',
                '```bash',
                '' }),
            i(15, '# Real-world example'),
            t({ '',
                '```',
                '',
                '## üí° Common Use Cases',
                '',
                '### Use Case 1: ' }),
            i(16, 'Scenario'),
            t({ '',
                '```bash',
                '' }),
            i(17, '# Command for this scenario'),
            t({ '',
                '```',
                '',
                '## ‚öôÔ∏è Parameters & Options',
                '',
                '| Parameter | Description | Required | Example |',
                '|-----------|-------------|----------|---------|',
                '| `' }),
            i(18, 'param'),
            t('` | '),
            i(19, 'Description'),
            t(' | '),
            c(20, { t('Yes'), t('No') }),
            t(' | `'),
            i(21, 'value'),
            t({ '` |',
                '',
                '## üìì Personal Notes',
                '',
                '- **When I Use This**: ' }),
            i(22, 'Your typical use cases'),
            t({ '',
                '- **Gotchas**: ' }),
            i(23, 'Things to watch out for'),
            t({ '',
                '- **Related Commands**: ' }),
            i(24, 'Similar or complementary commands'),
            t({ '',
                '',
                '' }),
            i(0),
        }),

        -- ====================================================================
        -- TODAY I LEARNED (TIL) (ORIGINAL)
        -- ====================================================================
        -- Trigger: "til"
        -- ====================================================================
        s('til', {
            t({ '---',
                'document_uuid: "' }),
            f(function() return generate_uuid() end),
            t({ '"',
                'id: "TIL-' }),
            f(function() return os.date('%Y-%m-%d') end),
            t({ '"',
                'title: "' }),
            i(1, 'What I learned'),
            t({ '"',
                'type: "learning-log"',
                'topic: "' }),
            i(2, 'Topic/Technology'),
            t({ '"',
                'confidence: ' }),
            c(3, { t('3'), t('1'), t('2'), t('4'), t('5') }),
            t({ '',
                'tags:',
                '  - "learning"',
                '  - "til"',
                'date_created: "' }),
            f(function() return os.date('%Y-%m-%d') end),
            t({ '"',
                '---',
                '',
                '# üí° TIL: ' }),
            i(4, 'Title'),
            t({ '',
                '',
                '## üéØ What I Learned',
                '',
                '' }),
            i(5, 'Explain the concept in detail'),
            t({ '',
                '',
                '## üíª Code Example',
                '',
                '```' }),
            i(6, 'language'),
            t({ '',
                '' }),
            i(7, '// Your code example'),
            t({ '',
                '```',
                '',
                '## üîó Resources',
                '',
                '- ' }),
            i(8, '[Link to article/docs]'),
            t({ '',
                '',
                '## üéì Apply This To',
                '',
                '' }),
            i(9, "Where you'll use this knowledge"),
            t({ '',
                '',
                '## ‚ùì Questions',
                '',
                '' }),
            i(0, "What you still don't understand"),
        }),

        -- ====================================================================
        -- ARCHITECTURE DECISION RECORD (ADR) (ORIGINAL)
        -- ====================================================================
        -- Trigger: "adr" - Document architectural decisions
        -- ====================================================================
        s('adr', {
            t({ '---',
                'document_uuid: "' }),
            f(function() return generate_uuid() end),
            t({ '"',
                'id: "ADR-' }),
            i(1, '001'),
            t({ '"',
                'title: "' }),
            i(2, 'Decision Title'),
            t({ '"',
                'type: "architecture-decision"',
                'status: "' }),
            c(3, { t('proposed'), t('accepted'), t('deprecated'), t('superseded') }),
            t({ '"',
                'date: "' }),
            f(function() return os.date('%Y-%m-%d') end),
            t({ '"',
                'deciders: "' }),
            i(4, 'Team/People'),
            t({ '"',
                'tags:',
                '  - "architecture"',
                '  - "adr"',
                '---',
                '',
                '# ADR-' }),
            i(5, '001'),
            t(': '),
            i(6, 'Decision Title'),
            t({ '',
                '',
                '## Status',
                '',
                '' }),
            c(7, { t('**Accepted**'), t('**Proposed**'), t('**Deprecated**') }),
            t({ ' - ' }),
            f(function() return os.date('%Y-%m-%d') end),
            t({ '',
                '',
                '## Context',
                '',
                '' }),
            i(8, "What is the issue we're seeing that is motivating this decision or change?"),
            t({ '',
                '',
                '## Decision',
                '',
                '' }),
            i(9, "What is the change that we're proposing and/or doing?"),
            t({ '',
                '',
                '## Consequences',
                '',
                '### Positive',
                '',
                '- ' }),
            i(10, 'Benefit 1'),
            t({ '',
                '',
                '### Negative',
                '',
                '- ' }),
            i(11, 'Trade-off 1'),
            t({ '',
                '',
                '### Risks',
                '',
                '- ' }),
            i(12, 'Risk 1'),
            t({ '',
                '',
                '## Alternatives Considered',
                '',
                '### Alternative 1: ' }),
            i(13, 'Name'),
            t({ '',
                '',
                '' }),
            i(14, "Why we didn't choose this"),
            t({ '',
                '',
                '## References',
                '',
                '- ' }),
            i(0, 'Related docs, discussions, or decisions'),
        }),

        -- ====================================================================
        -- TROUBLESHOOTING LOG (ORIGINAL)
        -- ====================================================================
        -- Trigger: "troubleshoot"
        -- ====================================================================
        s('troubleshoot', {
            t({ '---',
                'document_uuid: "' }),
            f(function() return generate_uuid() end),
            t({ '"',
                'id: "TLOG-' }),
            f(function() return os.date('%Y-%m-%d') end),
            t('-'),
            i(1, '001'),
            t({ '"',
                'title: "' }),
            i(2, 'Issue Title'),
            t({ '"',
                'type: "troubleshooting-log"',
                'severity: "' }),
            c(3, { t('critical'), t('high'), t('medium'), t('low') }),
            t({ '"',
                'status: "' }),
            c(4, { t('resolved'), t('investigating'), t('workaround'), t('escalated') }),
            t({ '"',
                'system: "' }),
            i(5, 'System/Service'),
            t({ '"',
                'tags:',
                '  - "troubleshooting"',
                '  - "' }),
            i(6, 'system-tag'),
            t({ '"',
                'date_created: "' }),
            f(function() return os.date('%Y-%m-%d') end),
            t({ '"',
                '---',
                '',
                '# üîß Troubleshooting: ' }),
            i(7, 'Issue Title'),
            t({ '',
                '',
                '## üö® Symptoms',
                '',
                '' }),
            i(8, "What's happening? Error messages, unexpected behavior"),
            t({ '',
                '',
                '## üîç Investigation',
                '',
                '### Step 1: ' }),
            i(9, 'What I checked'),
            t({ '',
                '```bash',
                '' }),
            i(10, '# Commands used'),
            t({ '',
                '```',
                '',
                '**Result**: ' }),
            i(11, 'What was found'),
            t({ '',
                '',
                '## üí° Root Cause',
                '',
                '' }),
            i(12, 'What actually caused the issue'),
            t({ '',
                '',
                '## ‚úÖ Resolution',
                '',
                '' }),
            i(13, 'How it was fixed'),
            t({ '',
                '',
                '```bash',
                '' }),
            i(14, '# Fix commands'),
            t({ '',
                '```',
                '',
                '## üìù Prevention',
                '',
                '' }),
            i(15, 'How to prevent this in the future'),
            t({ '',
                '',
                '## üîó Related',
                '',
                '- ' }),
            i(0, 'Related incidents, docs, or tickets'),
        }),

        -- ====================================================================
        -- RESEARCH NOTES (ORIGINAL)
        -- ====================================================================
        -- Trigger: "research" - Deep dive documentation
        -- ====================================================================
        s('research', {
            t({ '---',
                'document_uuid: "' }),
            f(function() return generate_uuid() end),
            t({ '"',
                'id: "RES-' }),
            f(function() return os.date('%Y') end),
            t('-'),
            i(1, '001'),
            t({ '"',
                'title: "' }),
            i(2, 'Research Topic'),
            t({ '"',
                'type: "research-notes"',
                'topic: "' }),
            i(3, 'Main Topic'),
            t({ '"',
                'depth: "' }),
            c(4, { t('deep-dive'), t('overview'), t('comparative') }),
            t({ '"',
                'confidence: ' }),
            c(5, { t('3'), t('1'), t('2'), t('4'), t('5') }),
            t({ '',
                'tags:',
                '  - "research"',
                '  - "' }),
            i(6, 'topic-tag'),
            t({ '"',
                'date_created: "' }),
            f(function() return os.date('%Y-%m-%d') end),
            t({ '"',
                '---',
                '',
                '# üî¨ Research: ' }),
            i(7, 'Topic'),
            t({ '',
                '',
                '## üìå Research Question',
                '',
                '' }),
            i(8, 'What are we trying to understand or solve?'),
            t({ '',
                '',
                '## üéØ Key Findings',
                '',
                '1. ' }),
            i(9, 'Finding 1'),
            t({ '',
                '2. ' }),
            i(10, 'Finding 2'),
            t({ '',
                '',
                '## üìö Detailed Analysis',
                '',
                '### Concept 1: ' }),
            i(11, 'Name'),
            t({ '',
                '',
                '' }),
            i(12, 'Detailed explanation'),
            t({ '',
                '',
                '### Concept 2: ' }),
            i(13, 'Name'),
            t({ '',
                '',
                '' }),
            i(14, 'Detailed explanation'),
            t({ '',
                '',
                '## üíª Technical Implementation',
                '',
                '```' }),
            i(15, 'language'),
            t({ '',
                '' }),
            i(16, '// Code examples or configs'),
            t({ '',
                '```',
                '',
                '## üîó References',
                '',
                '- ' }),
            i(17, 'Source 1'),
            t({ '',
                '- ' }),
            i(18, 'Source 2'),
            t({ '',
                '',
                '## üéì Application',
                '',
                '' }),
            i(19, 'How to apply this knowledge in your work'),
            t({ '',
                '',
                '## ‚ùì Open Questions',
                '',
                '' }),
            i(0, 'What still needs investigation'),
        }),

        -- ====================================================================
        -- RUNBOOK TEMPLATE (ORIGINAL)
        -- ====================================================================
        -- Trigger: "runbook"
        -- ====================================================================
        s('runbook', {
            t({ '---',
                'document_uuid: "' }),
            f(function() return generate_uuid() end),
            t({ '"',
                'id: "RUN-' }),
            f(function() return os.date('%Y') end),
            t('-'),
            i(1, '001'),
            t({ '"',
                'title: "' }),
            i(2, 'Procedure Title'),
            t({ '"',
                'type: "runbook"',
                'system: "' }),
            i(3, 'System Name'),
            t({ '"',
                'criticality: "' }),
            c(4, { t('high'), t('medium'), t('low') }),
            t({ '"',
                'estimated_time: "' }),
            i(5, '30 minutes'),
            t({ '"',
                'tags:',
                '  - "runbook"',
                '  - "operations"',
                'date_created: "' }),
            f(function() return os.date('%Y-%m-%d') end),
            t({ '"',
                '---',
                '',
                '# üìñ Runbook: ' }),
            i(6, 'Procedure Title'),
            t({ '',
                '',
                '## üéØ Purpose',
                '',
                '' }),
            i(7, 'What this procedure accomplishes'),
            t({ '',
                '',
                '## ‚ö†Ô∏è Prerequisites',
                '',
                '- [ ] ' }),
            i(8, 'Requirement 1'),
            t({ '',
                '- [ ] ' }),
            i(9, 'Requirement 2'),
            t({ '',
                '',
                '## üìã Procedure',
                '',
                '### Step 1: ' }),
            i(10, 'Step Description'),
            t({ '',
                '',
                '```bash',
                '' }),
            i(11, '# Commands'),
            t({ '',
                '```',
                '',
                '**Expected Result**: ' }),
            i(12, 'What you should see'),
            t({ '',
                '',
                '### Step 2: ' }),
            i(13, 'Step Description'),
            t({ '',
                '',
                '```bash',
                '' }),
            i(14, '# Commands'),
            t({ '',
                '```',
                '',
                '## üîÑ Rollback',
                '',
                '' }),
            i(15, 'How to revert if something goes wrong'),
            t({ '',
                '',
                '## ‚úÖ Verification',
                '',
                '- [ ] ' }),
            i(16, 'Check 1'),
            t({ '',
                '- [ ] ' }),
            i(17, 'Check 2'),
            t({ '',
                '',
                '## üìû Escalation',
                '',
                '- **Team**: ' }),
            i(18, 'Contact'),
            t({ '',
                '- **On-Call**: ' }),
            i(0, 'Number'),
        }),

        -- ====================================================================
        -- DECISION LOG (ORIGINAL)
        -- ====================================================================
        -- Trigger: "decision"
        -- ====================================================================
        s('decision', {
            t({ '---',
                'document_uuid: "' }),
            f(function() return generate_uuid() end),
            t({ '"',
                'id: "DEC-' }),
            f(function() return os.date('%Y-%m-%d') end),
            t({ '"',
                'title: "' }),
            i(1, 'Decision Title'),
            t({ '"',
                'type: "decision-log"',
                'impact: "' }),
            c(2, { t('high'), t('medium'), t('low') }),
            t({ '"',
                'date: "' }),
            f(function() return os.date('%Y-%m-%d') end),
            t({ '"',
                'decision_maker: "' }),
            i(3, 'Name/Team'),
            t({ '"',
                'tags: ["decision"]',
                '---',
                '',
                '# üìä Decision: ' }),
            i(4, 'Title'),
            t({ '',
                '',
                '## üéØ Decision',
                '',
                '' }),
            i(5, 'What was decided?'),
            t({ '',
                '',
                '## ü§î Context',
                '',
                '' }),
            i(6, 'Why was this decision necessary?'),
            t({ '',
                '',
                '## üìà Options Considered',
                '',
                '1. ‚úÖ **Chosen**: ' }),
            i(7, 'Option A'),
            t({ '',
                '   - ' }),
            i(8, 'Why chosen'),
            t({ '',
                '',
                '2. ‚ùå **Rejected**: ' }),
            i(9, 'Option B'),
            t({ '',
                '   - ' }),
            i(10, 'Why not chosen'),
            t({ '',
                '',
                '## üí° Rationale',
                '',
                '' }),
            i(11, 'Detailed reasoning'),
            t({ '',
                '',
                '## üìÖ Next Steps',
                '',
                '- [ ] ' }),
            i(0, 'Action item'),
        }),

        -- ====================================================================
        -- DAILY CAPTURE SNIPPETS (Tabularium 02_DAILY_CAPTURES) (ORIGINAL)
        -- ====================================================================

        -- Daily Note - Quick (minimal input)
        s('daily-quick', {
            t({ '---',
                'document_uuid: "' }),
            f(function() return generate_uuid() end),
            t({ '"',
                'id: "' }),
            f(function() return os.date('%Y') end),
            t('-DAY-'),
            i(1, '001'),
            t({ '"',
                'title: "' }),
            i(2, 'Note title'),
            t({ '"',
                'category: "tabularium"',
                'subcategory: "daily_captures"',
                'type: "daily-note"',
                'status: "captured"',
                'tags:',
                '  - "daily"',
                '  - "quick-capture"',
                'date_created: "' }),
            f(function() return os.date('%Y-%m-%d') end),
            t({ '"',
                'date_modified: "' }),
            f(function() return os.date('%Y-%m-%d') end),
            t({ '"',
                '---',
                '',
                '# ' }),
            i(3, 'Note title'),
            t({ '',
                '',
                '## üìù Notes',
                '',
                '' }),
            i(0),
            t({ '',
                '',
                '## Related',
                '',
                '- ' }),
        }),

        -- Daily Note - Full (structured)
        s('daily-full', {
            t({ '---',
                'document_uuid: "' }),
            f(function() return generate_uuid() end),
            t({ '"',
                'id: "' }),
            f(function() return os.date('%Y') end),
            t('-DAY-'),
            i(1, '001'),
            t({ '"',
                'title: "' }),
            i(2, 'Note title'),
            t({ '"',
                'description: "' }),
            i(3, 'Brief context'),
            t({ '"',
                'category: "tabularium"',
                'subcategory: "daily_captures"',
                'type: "daily-note"',
                'context: "' }),
            c(4, { t('note'), t('meeting'), t('task'), t('idea') }),
            t({ '"',
                'status: "captured"',
                'priority: "' }),
            c(5, { t('medium'), t('high'), t('low') }),
            t({ '"',
                'tags:',
                '  - "daily"',
                '  - "' }),
            i(6, 'tag1'),
            t({ '"',
                '  - "' }),
            i(7, 'tag2'),
            t({ '"',
                'date_created: "' }),
            f(function() return os.date('%Y-%m-%d') end),
            t({ '"',
                'date_modified: "' }),
            f(function() return os.date('%Y-%m-%d') end),
            t({ '"',
                '---',
                '',
                '# ' }),
            i(8, 'Note title'),
            t({ '',
                '',
                '## üìã Context',
                '',
                '' }),
            i(9, 'Brief context'),
            t({ '',
                '',
                '## üìù Notes',
                '',
                '' }),
            i(0),
            t({ '',
                '',
                '## ‚úÖ Action Items',
                '',
                '- [ ] ',
                '',
                '## üîó Related',
                '',
                '- Links: ',
                '- Projects: ',
                '- People: ',
                '',
                '## üìé Attachments',
                '',
                '' }),
        }),

        -- Task - Quick (ad-hoc)
        s('task-quick', {
            t({ '---',
                'document_uuid: "' }),
            f(function() return generate_uuid() end),
            t({ '"',
                'id: "' }),
            f(function() return os.date('%Y') end),
            t('-TSK-'),
            i(1, '001'),
            t({ '"',
                'title: "' }),
            i(2, 'Task title'),
            t({ '"',
                'category: "tabularium"',
                'subcategory: "daily_captures"',
                'type: "task"',
                'status: "todo"',
                'priority: "medium"',
                'tags:',
                '  - "task"',
                '  - "adhoc"',
                'date_created: "' }),
            f(function() return os.date('%Y-%m-%d') end),
            t({ '"',
                'date_modified: "' }),
            f(function() return os.date('%Y-%m-%d') end),
            t({ '"',
                'due_date: ""',
                '---',
                '',
                '# ' }),
            i(3, 'Task title'),
            t({ '',
                '',
                '## üìã Task Details',
                '',
                '' }),
            i(0),
            t({ '',
                '',
                '## ‚úÖ Checklist',
                '',
                '- [ ] Step 1',
                '- [ ] Step 2',
                '- [ ] Step 3',
                '',
                '## üìù Notes',
                '',
                '' }),
        }),

        -- Task - Full (detailed)
        s('task-full', {
            t({ '---',
                'document_uuid: "' }),
            f(function() return generate_uuid() end),
            t({ '"',
                'id: "' }),
            f(function() return os.date('%Y') end),
            t('-TSK-'),
            i(1, '001'),
            t({ '"',
                'title: "' }),
            i(2, 'Task title'),
            t({ '"',
                'description: "' }),
            i(3, 'Task description'),
            t({ '"',
                'category: "tabularium"',
                'subcategory: "daily_captures"',
                'type: "task"',
                'status: "' }),
            c(4, { t('todo'), t('in-progress'), t('blocked'), t('done') }),
            t({ '"',
                'priority: "' }),
            c(5, { t('high'), t('medium'), t('low') }),
            t({ '"',
                'effort: "' }),
            c(6, { t('medium'), t('small'), t('large') }),
            t({ '"',
                'tags:',
                '  - "task"',
                '  - "' }),
            i(7, 'tag1'),
            t({ '"',
                '  - "' }),
            i(8, 'tag2'),
            t({ '"',
                'date_created: "' }),
            f(function() return os.date('%Y-%m-%d') end),
            t({ '"',
                'date_modified: "' }),
            f(function() return os.date('%Y-%m-%d') end),
            t({ '"',
                'due_date: "' }),
            i(9, '2025-10-20'),
            t({ '"',
                'estimated_hours: ' }),
            i(10, '0'),
            t({ '',
                'related_project: ""',
                '---',
                '',
                '# ' }),
            i(11, 'Task title'),
            t({ '',
                '',
                '## üìã Task Overview',
                '',
                '' }),
            i(12, 'Task description'),
            t({ '',
                '',
                '## üéØ Success Criteria',
                '',
                '- [ ] ',
                '',
                '## ‚úÖ Implementation Steps',
                '',
                '- [ ] 1. ',
                '- [ ] 2. ',
                '- [ ] 3. ',
                '',
                '## ‚ö†Ô∏è Risks & Dependencies',
                '',
                '**Risks:**',
                '- ',
                '',
                '**Dependencies:**',
                '- ',
                '',
                '## üìù Notes',
                '',
                '' }),
            i(0),
            t({ '',
                '',
                '## üîó Related',
                '',
                '- Related Incidents: ',
                '- Documentation: ',
                '- Change Requests: ' }),
        }),

        -- Standup (auto-filled)
        s('standup', {
            t({ '---',
                'document_uuid: "' }),
            f(function() return generate_uuid() end),
            t({ '"',
                'id: "' }),
            f(function() return os.date('%Y-DAY-STANDUP-%m-%d') end),
            t({ '"',
                'title: "Daily Standup - ' }),
            f(function() return os.date('%B %d, %Y') end),
            t({ '"',
                'category: "tabularium"',
                'subcategory: "daily_captures"',
                'type: "standup"',
                'status: "captured"',
                'tags:',
                '  - "daily"',
                '  - "standup"',
                '  - "team"',
                'date_created: "' }),
            f(function() return os.date('%Y-%m-%d') end),
            t({ '"',
                'date_modified: "' }),
            f(function() return os.date('%Y-%m-%d') end),
            t({ '"',
                '---',
                '',
                '# Daily Standup - ' }),
            f(function() return os.date('%B %d, %Y') end),
            t({ '',
                '',
                '## ‚úÖ Yesterday (' }),
            f(function()
                local yesterday = os.time() - 86400
                return os.date('%Y-%m-%d', yesterday)
            end),
            t({ ')',
                '',
                '' }),
            i(1),
            t({ '',
                '',
                '## üéØ Today (' }),
            f(function() return os.date('%Y-%m-%d') end),
            t({ ')',
                '',
                '' }),
            i(2),
            t({ '',
                '',
                '## üöß Blockers',
                '',
                '' }),
            i(3, 'None'),
            t({ '',
                '',
                '## üìù Notes',
                '',
                '' }),
            i(0),
        }),

        -- Meeting - Quick
        s('meeting-quick', {
            t({ '---',
                'document_uuid: "' }),
            f(function() return generate_uuid() end),
            t({ '"',
                'id: "' }),
            f(function() return os.date('%Y') end),
            t('-MTG-'),
            i(1, '001'),
            t({ '"',
                'title: "' }),
            i(2, 'Meeting topic'),
            t({ '"',
                'category: "tabularium"',
                'subcategory: "daily_captures"',
                'type: "meeting"',
                'meeting_type: "' }),
            c(3, { t('discussion'), t('standup'), t('planning'), t('review') }),
            t({ '"',
                'status: "captured"',
                'tags:',
                '  - "meeting"',
                '  - "' }),
            i(4, 'tag'),
            t({ '"',
                'date_created: "' }),
            f(function() return os.date('%Y-%m-%d') end),
            t({ '"',
                'date_modified: "' }),
            f(function() return os.date('%Y-%m-%d') end),
            t({ '"',
                'meeting_date: "' }),
            f(function() return os.date('%Y-%m-%d') end),
            t({ '"',
                'meeting_time: "' }),
            f(function() return os.date('%H:%M') end),
            t({ '"',
                'attendees:',
                '  - "' }),
            i(5, 'Name 1'),
            t({ '"',
                '  - "' }),
            i(6, 'Name 2'),
            t({ '"',
                '---',
                '',
                '# ' }),
            i(7, 'Meeting topic'),
            t({ '',
                '',
                '**Date:** ' }),
            f(function() return os.date('%Y-%m-%d at %H:%M') end),
            t({ '',
                '**Attendees:** ' }),
            i(8, 'Names'),
            t({ '',
                '',
                '## üìã Agenda',
                '',
                '1. ' }),
            i(9),
            t({ '',
                '',
                '## üìù Discussion Notes',
                '',
                '### Topic 1: ',
                '',
                '' }),
            i(0),
            t({ '',
                '',
                '## ‚úÖ Action Items',
                '',
                '- [ ] [Person] - Action item',
                '',
                '## üìÖ Next Steps',
                '',
                '- ',
                '',
                '## üîó Related',
                '',
                '- Projects: ',
                '- Documents: ' }),
        }),

        -- Idea Capture
        s('idea-capture', {
            t({ '---',
                'document_uuid: "' }),
            f(function() return generate_uuid() end),
            t({ '"',
                'id: "' }),
            f(function() return os.date('%Y') end),
            t('-IDEA-'),
            i(1, '001'),
            t({ '"',
                'title: "' }),
            i(2, 'Core idea'),
            t({ '"',
                'category: "tabularium"',
                'subcategory: "daily_captures"',
                'type: "idea"',
                'status: "captured"',
                'feasibility: "' }),
            c(3, { t('unknown'), t('high'), t('medium'), t('low') }),
            t({ '"',
                'tags:',
                '  - "idea"',
                '  - "' }),
            i(4, 'tag'),
            t({ '"',
                'date_created: "' }),
            f(function() return os.date('%Y-%m-%d') end),
            t({ '"',
                'date_modified: "' }),
            f(function() return os.date('%Y-%m-%d') end),
            t({ '"',
                '---',
                '',
                '# üí° ' }),
            i(5, 'Core idea'),
            t({ '',
                '',
                '## The Idea',
                '',
                '' }),
            i(0),
            t({ '',
                '',
                '## Why This Matters',
                '',
                '- Problem it solves: ',
                '- Benefit: ',
                '',
                '## Initial Thoughts',
                '',
                '- ',
                '',
                '## Next Steps',
                '',
                '- [ ] Research existing solutions',
                '- [ ] Validate feasibility',
                '- [ ] Create spike/POC',
                '',
                '## üîó Related',
                '',
                '- Related to: ',
                '- Similar ideas: ' }),
        }),

        -- Troubleshoot - Quick
        s('troubleshoot-quick', {
            t({ '---',
                'document_uuid: "' }),
            f(function() return generate_uuid() end),
            t({ '"',
                'id: "' }),
            f(function() return os.date('%Y') end),
            t('-TLOG-'),
            i(1, '001'),
            t({ '"',
                'title: "' }),
            i(2, 'Issue description'),
            t({ '"',
                'category: "tabularium"',
                'subcategory: "daily_captures"',
                'type: "troubleshooting"',
                'status: "investigating"',
                'severity: "' }),
            c(3, { t('medium'), t('critical'), t('high'), t('low') }),
            t({ '"',
                'tags:',
                '  - "troubleshooting"',
                '  - "adhoc"',
                'date_created: "' }),
            f(function() return os.date('%Y-%m-%d %H:%M') end),
            t({ '"',
                'date_modified: "' }),
            f(function() return os.date('%Y-%m-%d %H:%M') end),
            t({ '"',
                '---',
                '',
                '# üîß ' }),
            i(4, 'Issue description'),
            t({ '',
                '',
                '**Started:** ' }),
            f(function() return os.date('%Y-%m-%d at %H:%M') end),
            t({ '',
                '**Status:** Investigating',
                '**Severity:** ' }),
            i(5, 'Medium'),
            t({ '',
                '',
                '## üö® Symptoms',
                '',
                '' }),
            i(0),
            t({ '',
                '',
                '## üîç Investigation Log',
                '',
                '### ' }),
            f(function() return os.date('%H:%M') end),
            t({ ' - Initial check',
                '',
                '```bash',
                '# Commands run',
                '```',
                '',
                'Result: ',
                '',
                '## üí° Root Cause',
                '',
                '[When found]',
                '',
                '## ‚úÖ Resolution',
                '',
                '[How it was fixed]',
                '',
                '## üìù Follow-up',
                '',
                '- [ ] Update documentation',
                '- [ ] Create runbook if recurring',
                '- [ ] Notify team' }),
        }),

        -- ====================================================================
        -- QUICK CALLOUTS (ORIGINAL)
        -- ====================================================================

        s('info', {
            t({ '> [!info] ' }),
            i(1, 'Information'),
            t({ '', '> ' }),
            i(0, 'Content'),
        }),

        s('tip', {
            t({ '> [!tip] ' }),
            i(1, 'Pro Tip'),
            t({ '', '> ' }),
            i(0, 'Content'),
        }),

        s('warning', {
            t({ '> [!warning] ' }),
            i(1, 'Warning'),
            t({ '', '> ' }),
            i(0, 'Content'),
        }),

        s('danger', {
            t({ '> [!danger] ' }),
            i(1, 'Danger'),
            t({ '', '> ' }),
            i(0, 'Content'),
        }),

        -- ====================================================================
        -- PRODUCTIVITY SHORTCUTS FOR WRITERS (ORIGINAL)
        -- ====================================================================

        -- Quick header with auto-date
        s('header', {
            t('# '),
            i(1, 'Title'),
            t({ '', '' }),
            f(function() return os.date('%Y-%m-%d') end),
            t({ '', '', '' }),
            i(0),
        }),

        -- Quick note with timestamp
        s('note-quick', {
            t('## üìù '),
            f(function() return os.date('%H:%M') end),
            t({ ' - ', '' }),
            i(0),
        }),

        -- Code block with auto-language
        s('code', {
            t('```'),
            i(1, 'bash'),
            t({ '', '' }),
            i(2, '# code here'),
            t({ '', '```', '', '' }),
            i(0),
        }),

        -- Mermaid diagram starter
        s('mermaid', {
            t({ '```mermaid',
                'graph ' }),
            c(1, { t('LR'), t('TB'), t('TD') }),
            t({ '',
                '    A[' }),
            i(2, 'Start'),
            t('] --> B['),
            i(3, 'End'),
            t({ ']',
                '```',
                '' }),
            i(0),
        }),

        -- Table generator
        s('table', {
            t('| '),
            i(1, 'Column 1'),
            t(' | '),
            i(2, 'Column 2'),
            t(' | '),
            i(3, 'Column 3'),
            t({ ' |',
                '|----------|----------|----------|',
                '| ' }),
            i(4, 'Value 1'),
            t(' | '),
            i(5, 'Value 2'),
            t(' | '),
            i(6, 'Value 3'),
            t({ ' |',
                '' }),
            i(0),
        }),

        -- ====================================================================
        -- CLIPBOARD TO TABLE CONVERTER (ORIGINAL)
        -- ====================================================================
        s('table-paste', {
            f(function()
                -- Get clipboard content
                local clipboard = vim.fn.getreg('+')

                -- If clipboard is empty, return helpful message
                if not clipboard or clipboard == '' then
                    return { '| No data in clipboard |', '| Copy some data first! |' }
                end

                -- Split clipboard into lines, remove empty lines
                local lines = vim.split(clipboard, '\n', { trimempty = true })

                if #lines == 0 then
                    return { '| Clipboard is empty |' }
                end

                -- STEP 1: DETECT DELIMITER
                local delimiter = '\t' -- Default: assume tab-separated (Excel/TSV)

                if not lines[1]:find('\t') then
                    -- No tabs found, check for commas (CSV)
                    if lines[1]:find(',') then
                        delimiter = ','
                    else
                        -- No tabs or commas, assume space-separated (command output)
                        delimiter = '%s%s+'
                    end
                end

                -- STEP 2: PARSE ALL ROWS
                local rows = {}
                local max_cols = 0

                for _, line in ipairs(lines) do
                    local cells = vim.split(line, delimiter, { trimempty = false })

                    -- Trim whitespace from each cell
                    for j, cell in ipairs(cells) do
                        cells[j] = vim.trim(cell)
                    end

                    table.insert(rows, cells)
                    max_cols = math.max(max_cols, #cells)
                end

                -- STEP 3: BUILD MARKDOWN TABLE
                local result = {}

                for i, row in ipairs(rows) do
                    -- Pad row with empty cells if needed
                    while #row < max_cols do
                        table.insert(row, '')
                    end

                    -- Build markdown row
                    local formatted_row = '| ' .. table.concat(row, ' | ') .. ' |'
                    table.insert(result, formatted_row)

                    -- Add separator after first row
                    if i == 1 then
                        local separator_parts = {}
                        for _ = 1, max_cols do
                            table.insert(separator_parts, '-------')
                        end
                        local separator = '| ' .. table.concat(separator_parts, ' | ') .. ' |'
                        table.insert(result, separator)
                    end
                end

                return result
            end),
        }),

        -- Task list
        s('tasks', {
            t('## ‚úÖ Tasks'),
            t({ '', '', '- [ ] ' }),
            i(1, 'Task 1'),
            t({ '', '- [ ] ' }),
            i(2, 'Task 2'),
            t({ '', '- [ ] ' }),
            i(0, 'Task 3'),
        }),

        -- Quick meeting capture
        s('mtg', {
            t('## üìÖ Meeting - '),
            f(function() return os.date('%Y-%m-%d %H:%M') end),
            t({ '', '', '**Topic**: ' }),
            i(1, 'Meeting topic'),
            t({ '', '**Attendees**: ' }),
            i(2, 'Names'),
            t({ '', '', '### Notes', '', '' }),
            i(0),
        }),

        -- ====================================================================
        -- SPANISH CONNECTORS (15 snippets) (ORIGINAL)
        -- ====================================================================

        -- Contrast/Opposition
        s('sinembargo', {
            t('Sin embargo, '),
            i(0),
        }),

        s('noobstante', {
            t('No obstante, '),
            i(0),
        }),

        s('porelcontrario', {
            t('Por el contrario, '),
            i(0),
        }),

        s('apesarde', {
            t('A pesar de que '),
            i(0),
        }),

        -- Cause/Consequence
        s('porlotanto', {
            t('Por lo tanto, '),
            i(0),
        }),

        s('porconsiguiente', {
            t('Por consiguiente, '),
            i(0),
        }),

        s('debidoa', {
            t('Debido a '),
            i(0),
        }),

        s('porende', {
            t('Por ende, '),
            i(0),
        }),

        -- Addition/Emphasis
        s('ademas', {
            t('Adem√°s, '),
            i(0),
        }),

        s('asimismo', {
            t('Asimismo, '),
            i(0),
        }),

        s('porotroparte', {
            t('Por otra parte, '),
            i(0),
        }),

        s('encuantoa', {
            t('En cuanto a '),
            i(0),
        }),

        -- Conclusion
        s('enresumen', {
            t('En resumen, '),
            i(0),
        }),

        s('enconclucion', {
            t('En conclusi√≥n, '),
            i(0),
        }),

        s('finalmente', {
            t('Finalmente, '),
            i(0),
        }),

        -- ====================================================================
        -- MATH SYMBOLS & STRUCTURES (12 snippets) (ORIGINAL)
        -- ====================================================================

        -- Block equation
        s('eq', {
            t({ '$$', '' }),
            i(1, 'equation'),
            t({ '', '$$' }),
            t({ '', '' }),
            i(0),
        }),

        -- Inline math
        s('$$', {
            t('$'),
            i(1),
            t('$'),
            i(0),
        }),

        -- Fraction
        s('frac', {
            t('\\frac{'),
            i(1, 'numerador'),
            t('}{'),
            i(2, 'denominador'),
            t('}'),
            i(0),
        }),

        -- Square root
        s('sqrt', {
            t('\\sqrt{'),
            i(1),
            t('}'),
            i(0),
        }),

        -- Summation
        s('sum', {
            t('\\sum_{'),
            i(1, 'i=1'),
            t('}^{'),
            i(2, 'n'),
            t('} '),
            i(0),
        }),

        -- Integral
        s('int', {
            t('\\int_{'),
            i(1, 'a'),
            t('}^{'),
            i(2, 'b'),
            t('} '),
            i(0),
        }),

        -- Limit
        s('lim', {
            t('\\lim_{'),
            i(1, 'x \\to \\infty'),
            t('} '),
            i(0),
        }),

        -- Greek letters
        s('alpha', {
            t('\\alpha'),
            i(0),
        }),

        s('beta', {
            t('\\beta'),
            i(0),
        }),

        s('theta', {
            t('\\theta'),
            i(0),
        }),

        s('infty', {
            t('\\infty'),
            i(0),
        }),

        s('forall', {
            t('\\forall'),
            i(0),
        }),

        -- ====================================================================
        -- SPANISH ESSAY/ARTICLE STRUCTURES (3 full templates) (ORIGINAL)
        -- ====================================================================

        -- Argumentative Essay
        s('ensayo', {
            t({ '---',
                'document_uuid: "' }),
            f(function() return generate_uuid() end),
            t({ '"',
                'id: "2025-ESP-COMP-ENS-' }),
            i(1, '001'),
            t({ '"',
                'title: "' }),
            i(2, 'T√≠tulo del ensayo'),
            t({ '"',
                'type: "spanish-composition"',
                'composition_type: "ensayo"',
                'register: "formal"',
                'target_words: ' }),
            c(3, { t('200'), t('250'), t('150') }),
            t({ '',
                'status: "draft"',
                'tags:',
                '  - "ensayo"',
                '  - "dele-c1"',
                'date_created: "' }),
            f(function() return os.date('%Y-%m-%d') end),
            t({ '"',
                '---',
                '',
                '# ' }),
            i(4, 'T√≠tulo del ensayo'),
            t({ '',
                '',
                '## üéØ DELE C1 Criteria',
                '- [ ] Adecuaci√≥n (registro apropiado)',
                '- [ ] Coherencia y cohesi√≥n',
                '- [ ] Riqueza y variedad l√©xica',
                '- [ ] Correcci√≥n gramatical',
                '- [ ] Complejidad sint√°ctica',
                '',
                '## Introducci√≥n',
                '',
                '' }),
            i(5, 'Presenta el tema y la tesis (50-75 palabras)'),
            t({ '',
                '',
                '## Desarrollo',
                '',
                '### Argumento 1',
                '',
                '' }),
            i(6, 'Primer argumento con ejemplos'),
            t({ '',
                '',
                '### Argumento 2',
                '',
                '' }),
            i(7, 'Segundo argumento con ejemplos'),
            t({ '',
                '',
                '### Contraargumento',
                '',
                '' }),
            i(8, 'Posible objeci√≥n y refutaci√≥n'),
            t({ '',
                '',
                '## Conclusi√≥n',
                '',
                '' }),
            i(9, 'Resumen y reafirmaci√≥n de la tesis (50-75 palabras)'),
            t({ '',
                '',
                '---',
                '',
                '## üìä Self-Assessment',
                '',
                '**Word count**: [COUNT]',
                '',
                '**Connectors used**:',
                '- Sin embargo (contrast)',
                '- Por lo tanto (consequence)',
                '- Adem√°s (addition)',
                '',
                '**Complex structures**:',
                '- Subjunctive: ',
                '- Conditional: ',
                '',
                '**Vocabulary highlights**:',
                '- ',
                '',
                '' }),
            i(0),
        }),

        -- Article/Opinion Piece
        s('articulo', {
            t({ '---',
                'document_uuid: "' }),
            f(function() return generate_uuid() end),
            t({ '"',
                'id: "2025-ESP-COMP-ART-' }),
            i(1, '001'),
            t({ '"',
                'title: "' }),
            i(2, 'T√≠tulo del art√≠culo'),
            t({ '"',
                'type: "spanish-composition"',
                'composition_type: "articulo"',
                'register: "formal"',
                'target_words: ' }),
            c(3, { t('250'), t('200'), t('300') }),
            t({ '',
                'status: "draft"',
                'tags:',
                '  - "articulo"',
                '  - "dele-c1"',
                'date_created: "' }),
            f(function() return os.date('%Y-%m-%d') end),
            t({ '"',
                '---',
                '',
                '# ' }),
            i(4, 'T√≠tulo atractivo del art√≠culo'),
            t({ '',
                '',
                '## üéØ DELE C1 Criteria',
                '- [ ] Adecuaci√≥n (registro apropiado)',
                '- [ ] Coherencia y cohesi√≥n',
                '- [ ] Riqueza y variedad l√©xica',
                '- [ ] Correcci√≥n gramatical',
                '- [ ] Complejidad sint√°ctica',
                '',
                '## Lead/Entradilla',
                '',
                '' }),
            i(5, 'P√°rrafo inicial atractivo que capte la atenci√≥n (30-50 palabras)'),
            t({ '',
                '',
                '## Contexto',
                '',
                '' }),
            i(6, 'Presentaci√≥n del tema y su relevancia'),
            t({ '',
                '',
                '## An√°lisis',
                '',
                '' }),
            i(7, 'Desarrollo del tema con ejemplos y datos'),
            t({ '',
                '',
                '## Perspectivas',
                '',
                '' }),
            i(8, 'Diferentes puntos de vista o implicaciones'),
            t({ '',
                '',
                '## Conclusi√≥n',
                '',
                '' }),
            i(9, 'Cierre reflexivo o llamada a la acci√≥n'),
            t({ '',
                '',
                '---',
                '',
                '## üìä Self-Assessment',
                '',
                '**Word count**: [COUNT]',
                '',
                '**Style elements**:',
                '- Engaging opening: ',
                '- Personal voice: ',
                '- Persuasive elements: ',
                '',
                '**Connectors used**:',
                '- ',
                '',
                '' }),
            i(0),
        }),

        -- Review (Book/Film/Restaurant/etc.)
        s('resena', {
            t({ '---',
                'document_uuid: "' }),
            f(function() return generate_uuid() end),
            t({ '"',
                'id: "2025-ESP-COMP-RES-' }),
            i(1, '001'),
            t({ '"',
                'title: "Rese√±a: ' }),
            i(2, 'T√≠tulo de la obra'),
            t({ '"',
                'type: "spanish-composition"',
                'composition_type: "resena"',
                'register: "formal"',
                'reviewed_item: "' }),
            i(3, 'libro/pel√≠cula/restaurante'),
            t({ '"',
                'target_words: ' }),
            c(4, { t('200'), t('250'), t('150') }),
            t({ '',
                'status: "draft"',
                'tags:',
                '  - "resena"',
                '  - "dele-c1"',
                'date_created: "' }),
            f(function() return os.date('%Y-%m-%d') end),
            t({ '"',
                '---',
                '',
                '# Rese√±a: ' }),
            i(5, 'T√≠tulo de la obra'),
            t({ '',
                '',
                '## üéØ DELE C1 Criteria',
                '- [ ] Adecuaci√≥n (registro apropiado)',
                '- [ ] Coherencia y cohesi√≥n',
                '- [ ] Riqueza y variedad l√©xica',
                '- [ ] Correcci√≥n gramatical',
                '- [ ] Complejidad sint√°ctica',
                '',
                '## Datos b√°sicos',
                '',
                '- **T√≠tulo**: ' }),
            i(6, 't√≠tulo'),
            t({ '',
                '- **Autor/Director**: ' }),
            i(7, 'nombre'),
            t({ '',
                '- **A√±o**: ' }),
            i(8, 'a√±o'),
            t({ '',
                '- **G√©nero**: ' }),
            i(9, 'g√©nero'),
            t({ '',
                '',
                '## Resumen',
                '',
                '' }),
            i(10, 'Breve resumen sin spoilers (50 palabras)'),
            t({ '',
                '',
                '## An√°lisis',
                '',
                '### Aspectos positivos',
                '',
                '' }),
            i(11, 'Qu√© destaca, qu√© funciona bien'),
            t({ '',
                '',
                '### Aspectos negativos',
                '',
                '' }),
            i(12, 'Qu√© podr√≠a mejorar, debilidades'),
            t({ '',
                '',
                '## Valoraci√≥n personal',
                '',
                '' }),
            i(13, 'Opini√≥n fundamentada'),
            t({ '',
                '',
                '## Recomendaci√≥n',
                '',
                '**Puntuaci√≥n**: ' }),
            c(14, { t('‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê'), t('‚≠ê‚≠ê‚≠ê‚≠ê'), t('‚≠ê‚≠ê‚≠ê'), t('‚≠ê‚≠ê'), t('‚≠ê') }),
            t({ '',
                '',
                '' }),
            i(15, 'Para qui√©n es recomendable esta obra'),
            t({ '',
                '',
                '---',
                '',
                '## üìä Self-Assessment',
                '',
                '**Word count**: [COUNT]',
                '',
                '**Balance**: ',
                '- Objective description: ',
                '- Subjective opinion: ',
                '',
                '' }),
            i(0),
        }),

        -- ====================================================================
        -- SPANISH COMPOSITION PHRASES (8 snippets) (ORIGINAL)
        -- ====================================================================

        -- Formal openings
        s('reclamacion', {
            t({ 'Estimados se√±ores:', '', '',
                'Me dirijo a ustedes con el fin de presentar una reclamaci√≥n formal acerca de ' }),
            i(1, 'motivo de la reclamaci√≥n'),
            t({ '. ' }),
            i(0),
        }),

        s('solicitud', {
            t({ 'Estimado/a se√±or/a:', '', '', 'Por medio de la presente, solicito ' }),
            i(1, 'lo que solicitas'),
            t({ '. ' }),
            i(0),
        }),

        s('medjirijo', {
            t('Me dirijo a ustedes con el fin de '),
            i(0),
        }),

        -- Formal closings
        s('despedida-formal', {
            t({ '', '', 'Atentamente,', '' }),
            i(1, 'Tu nombre'),
            t({ '', '' }),
            i(0),
        }),

        s('lesruego', {
            t('Les ruego que '),
            i(0),
        }),

        s('agradeceria', {
            t('Agradecer√≠a que '),
            i(0),
        }),

        s('quedoespera', {
            t('Quedo a la espera de su respuesta.'),
            i(0),
        }),

        -- Opinion
        s('enmiopinion', {
            t('En mi opini√≥n, '),
            i(0),
        }),

        -- ====================================================================
        -- LITERARY JOURNAL (4 snippets) (ORIGINAL)
        -- ====================================================================

        -- Don Quijote chapter template
        s('capitulo-dq', {
            t({ '---',
                'document_uuid: "' }),
            f(function() return generate_uuid() end),
            t({ '"',
                'id: "2025-LIT-DQ-' }),
            c(1, { t('I'), t('II') }),
            t('-'),
            i(2, '08'),
            t({ '"',
                'title: "Don Quijote - ' }),
            f(function(args) return args[1][1] end, { 1 }),
            t('.'),
            f(function(args) return args[1][1] end, { 2 }),
            t(' - '),
            i(3, 'T√≠tulo del cap√≠tulo'),
            t({ '"',
                'type: "literary-journal"',
                'book: "Don Quijote de la Mancha"',
                'author: "Miguel de Cervantes Saavedra"',
                'part: "' }),
            f(function(args) return args[1][1] end, { 1 }),
            t({ '"',
                'chapter: "' }),
            f(function(args) return args[1][1] end, { 2 }),
            t({ '"',
                'date_read: "' }),
            f(function() return os.date('%Y-%m-%d') end),
            t({ '"',
                'tags:',
                '  - "literatura"',
                '  - "don-quijote"',
                '  - "cervantes"',
                '---',
                '',
                '# Don Quijote - ' }),
            f(function(args) return args[1][1] end, { 1 }),
            t('.'),
            f(function(args) return args[1][1] end, { 2 }),
            t(' - '),
            f(function(args) return args[1][1] end, { 3 }),
            t({ '',
                '',
                '## üìñ Resumen',
                '',
                '' }),
            i(4, 'Resumen del cap√≠tulo en espa√±ol'),
            t({ '',
                '',
                '## üí≠ Reflexiones personales',
                '',
                '' }),
            i(5, 'Tus pensamientos sobre el cap√≠tulo'),
            t({ '',
                '',
                '## üìö Vocabulario nuevo',
                '',
                '| Palabra | Significado | Ejemplo del texto |',
                '|---------|-------------|-------------------|',
                '| ' }),
            i(6, 'palabra'),
            t(' | '),
            i(7, 'significado'),
            t(' | '),
            i(8, 'ejemplo'),
            t({ ' |',
                '',
                '## üé® Recursos literarios',
                '',
                '**' }),
            c(9, { t('Iron√≠a'), t('Met√°fora'), t('S√≠mil'), t('Hip√©rbole'), t('Personificaci√≥n') }),
            t('**: '),
            i(10, 'Ejemplo del texto'),
            t({ '',
                '',
                '## ‚úçÔ∏è Pr√°ctica de escritura',
                '',
                '' }),
            i(11, 'Escribe 100-150 palabras sobre alg√∫n aspecto del cap√≠tulo'),
            t({ '',
                '',
                '## ü§î Preguntas para explorar',
                '',
                '- ' }),
            i(0, 'Pregunta sobre el cap√≠tulo'),
        }),

        -- Vocabulary table row
        s('vocab', {
            t('| '),
            i(1, 'palabra'),
            t(' | '),
            i(2, 'significado'),
            t(' | '),
            i(3, 'ejemplo del texto'),
            t(' |'),
            i(0),
        }),

        -- Quote citation
        s('cita', {
            t('> "'),
            i(1, 'cita textual'),
            t('" ('),
            c(2, { t('Cap√≠tulo'), t('Parte') }),
            t(' '),
            i(3, 'n√∫mero'),
            t(', p. '),
            i(4, 'p√°gina'),
            t(')'),
            i(0),
        }),

        -- Literary device
        s('recurso', {
            t('**'),
            c(1, {
                t('Met√°fora'),
                t('Iron√≠a'),
                t('S√≠mil'),
                t('Hip√©rbole'),
                t('Personificaci√≥n'),
                t('Ant√≠tesis'),
                t('Paradoja'),
                t('An√°fora')
            }),
            t('**: '),
            i(0),
        }),

        -- ====================================================================
        -- UNIVERSAL STRUCTURE (6 snippets) (ORIGINAL)
        -- ====================================================================

        -- Vim fold headers
        s('sec1', {
            t('## '),
            i(1, 'T√≠tulo'),
            t(' {{{1'),
            t({ '', '' }),
            i(0),
        }),

        s('sec2', {
            t('### '),
            i(1, 'Subt√≠tulo'),
            t(' {{{2'),
            t({ '', '' }),
            i(0),
        }),

        s('sec3', {
            t('#### '),
            i(1, 'Detalle'),
            t(' {{{3'),
            t({ '', '' }),
            i(0),
        }),

        -- IPA notation
        s('ipa', {
            t('['),
            i(1, 'IPA'),
            t(']'),
            i(0),
        }),

        -- Linguistic YAML with folds
        s('yaml-ling', {
            t({ '---  {{{',
                'document_uuid: "' }),
            f(function() return generate_uuid() end),
            t({ '"',
                'project_uuid: "7983bfc4-ea8f-407b-b236-dc1cacfe3b6a"',
                'id: "2025-LIN-' }),
            i(1, '08'),
            t('_-'),
            i(2, '001'),
            t({ '"',
                'title: "' }),
            i(3, 'T√≠tulo'),
            t({ '"',
                'category: "spanish_linguistics"',
                'subcategory: "' }),
            i(4, '08-dialectologia'),
            t({ '"',
                'tags:',
                '  - "linguistics"',
                '  - "' }),
            i(5, 'tag'),
            t({ '"',
                'date_created: "' }),
            f(function() return os.date('%Y-%m-%d') end),
            t({ '"',
                'date_modified: "' }),
            f(function() return os.date('%Y-%m-%d') end),
            t({ '"',
                '---  }}}',
                '',
                '# ' }),
            i(6, 'T√≠tulo'),
            t({ '',
                '',
                '' }),
            i(0),
        }),

        -- Spanish Composition YAML
        s('yaml-esp-comp', {
            t({ '---',
                'document_uuid: "' }),
            f(function() return generate_uuid() end),
            t({ '"',
                'id: "2025-ESP-COMP-' }),
            i(1, 'RCL'),
            t('-'),
            i(2, '001'),
            t({ '"',
                'title: "' }),
            i(3, 'T√≠tulo'),
            t({ '"',
                'type: "spanish-composition"',
                'composition_type: "' }),
            c(4, { t('reclamacion'), t('solicitud'), t('resena'), t('ensayo'), t('articulo') }),
            t({ '"',
                'register: "' }),
            c(5, { t('formal'), t('informal') }),
            t({ '"',
                'target_words: ' }),
            i(6, '200'),
            t({ '',
                'actual_words: 0',
                'status: "draft"',
                'tags:',
                '  - "spanish-composition"',
                '  - "dele-c1"',
                'date_created: "' }),
            f(function() return os.date('%Y-%m-%d') end),
            t({ '"',
                '---',
                '',
                '' }),
            i(0),
        }),

        -- ====================================================================
        -- MATHEMATICS STRUCTURES (4 snippets) (ORIGINAL)
        -- ====================================================================

        -- Theorem with proof
        s('teorema', {
            t({ '## Teorema {{{2',
                '',
                '**Enunciado**: ' }),
            i(1, 'enunciado del teorema'),
            t({ '',
                '',
                '**Demostraci√≥n**: ',
                '',
                '' }),
            i(2, 'demostraci√≥n paso a paso'),
            t({ '',
                '',
                '$\\blacksquare$',
                '',
                '}}}2',
                '' }),
            i(0),
        }),

        -- Definition
        s('definicion', {
            t('**Definici√≥n**: '),
            i(1, 't√©rmino'),
            t(' - '),
            i(0, 'definici√≥n'),
        }),

        -- Example
        s('ejemplo', {
            t('**Ejemplo '),
            i(1, '1'),
            t('**: '),
            i(0),
        }),

        -- Lemma
        s('lema', {
            t({ '## Lema {{{2',
                '',
                '**Enunciado**: ' }),
            i(1, 'enunciado del lema'),
            t({ '',
                '',
                '**Demostraci√≥n**: ',
                '',
                '' }),
            i(2, 'demostraci√≥n'),
            t({ '',
                '',
                '$\\blacksquare$',
                '',
                '}}}2',
                '' }),
            i(0),
        }),

        -- ====================================================================
        -- SPANISH LINGUISTICS SNIPPETS (3 snippets) (ORIGINAL)
        -- ====================================================================

        -- Spanish phoneme
        s('es-fonema', {
            t('**Fonema**: ['),
            i(1, 'IPA'),
            t('] - '),
            i(0, 'descripci√≥n'),
        }),

        -- Spanish example
        s('es-ejemplo', {
            t('**Ejemplo**: *'),
            i(1, 'palabra'),
            t('* ['),
            i(2, 'IPA'),
            t('] - '),
            i(0, 'glosa'),
        }),

        -- Phoneme comparison table
        s('tabla-fon', {
            t({ '| Palabra | IPA | Descripci√≥n |',
                '|---------|-----|-------------|',
                '| *' }),
            i(1, 'palabra'),
            t('* | ['),
            i(2, 'IPA'),
            t('] | '),
            i(3, 'descripci√≥n'),
            t(' |'),
            i(0),
        }),

    })

    vim.notify('üìö Enhanced Hierarchical Obsidian Templates loaded - ' ..
        'ALL original snippets + new hierarchical work log templates ready!',
        vim.log.levels.INFO)
end

return M

-- ============================================================================
-- COMPLETE SNIPPET REFERENCE GUIDE
-- ============================================================================
--
-- NEW HIERARCHICAL WORK LOG TEMPLATES:
-- - worklog           ‚Üí Complete hierarchical daily work log
-- - case-full         ‚Üí Complete troubleshooting case with full hierarchy
-- - meeting-section   ‚Üí Hierarchical meeting documentation
-- - project-section   ‚Üí Hierarchical project documentation
-- - device-change     ‚Üí Hierarchical device change documentation
-- - kb-entry          ‚Üí Knowledge base entry with hierarchy
--
-- NEW QUICK HIERARCHY BUILDERS:
-- - case-quick        ‚Üí Simplified case documentation
-- - task-row          ‚Üí Summary table row (auto-timestamp)
-- - device-row        ‚Üí Device tracking table row
-- - time-row          ‚Üí Time summary table row
-- - finding           ‚Üí Investigation finding with status emoji
-- - action            ‚Üí Indented checkbox action item
-- - code-indent       ‚Üí Indented code block
-- - status            ‚Üí Status indicator with emoji
--
-- ORIGINAL ENTERPRISE TEMPLATES:
-- - yaml              ‚Üí Universal frontmatter (adapts to any doc type)
-- - project-full      ‚Üí Complete project with ISE/Infrastructure metadata
-- - cmd-full          ‚Üí Command arsenal documentation
-- - adr               ‚Üí Architecture Decision Record
-- - troubleshoot      ‚Üí Troubleshooting log with investigation steps
-- - research          ‚Üí Deep dive research notes
-- - runbook           ‚Üí Operations runbook
-- - decision          ‚Üí Decision log
-- - til               ‚Üí Today I Learned
--
-- ORIGINAL DAILY CAPTURE SNIPPETS (Tabularium 02_DAILY_CAPTURES):
-- - daily-quick       ‚Üí Quick daily note (minimal - 2 inputs)
-- - daily-full        ‚Üí Structured daily note with context
-- - task-quick        ‚Üí Ad-hoc task (fast capture)
-- - task-full         ‚Üí Detailed task with tracking
-- - standup           ‚Üí Daily standup (auto-filled dates)
-- - meeting-quick     ‚Üí Meeting notes with agenda
-- - idea-capture      ‚Üí Quick idea/insight capture
-- - troubleshoot-quick ‚Üí Fast troubleshooting note with timeline
--
-- ORIGINAL QUICK CAPTURES:
-- - header            ‚Üí Title with auto-date
-- - note-quick        ‚Üí Timestamped note
-- - code              ‚Üí Code block
-- - mermaid           ‚Üí Diagram
-- - table             ‚Üí Markdown table
-- - table-paste       ‚Üí Convert clipboard to markdown table
-- - tasks             ‚Üí Task checklist
-- - mtg               ‚Üí Quick meeting notes
--
-- ORIGINAL CALLOUTS:
-- - info, tip, warning, danger
--
-- ORIGINAL SPANISH CONNECTORS (15):
-- - sinembargo, noobstante, porelcontrario, apesarde
-- - porlotanto, porconsiguiente, debidoa, porende
-- - ademas, asimismo, porotroparte, encuantoa
-- - enresumen, enconclucion, finalmente
--
-- ORIGINAL MATH SYMBOLS (12):
-- - eq, $$, frac, sqrt, sum, int, lim
-- - alpha, beta, theta, infty, forall
--
-- ORIGINAL SPANISH ESSAY/ARTICLE STRUCTURES (3):
-- - ensayo            ‚Üí Argumentative essay (DELE C1)
-- - articulo          ‚Üí Article/Opinion piece (DELE C1)
-- - resena            ‚Üí Review template (DELE C1)
--
-- ORIGINAL SPANISH COMPOSITION PHRASES (8):
-- - reclamacion, solicitud, medjirijo
-- - despedida-formal, lesruego, agradeceria, quedoespera
-- - enmiopinion
--
-- ORIGINAL LITERARY JOURNAL (4):
-- - capitulo-dq       ‚Üí Don Quijote chapter template
-- - vocab             ‚Üí Vocabulary table row
-- - cita              ‚Üí Quote citation
-- - recurso           ‚Üí Literary device
--
-- ORIGINAL UNIVERSAL STRUCTURE (6):
-- - sec1, sec2, sec3  ‚Üí Vim fold headers
-- - ipa               ‚Üí IPA notation
-- - yaml-ling         ‚Üí Linguistic YAML with folds
-- - yaml-esp-comp     ‚Üí Spanish Composition YAML
--
-- ORIGINAL MATHEMATICS STRUCTURES (4):
-- - teorema           ‚Üí Theorem with proof
-- - definicion        ‚Üí Definition
-- - ejemplo           ‚Üí Example
-- - lema              ‚Üí Lemma
--
-- ORIGINAL SPANISH LINGUISTICS (3):
-- - es-fonema         ‚Üí Spanish phoneme
-- - es-ejemplo        ‚Üí Spanish example
-- - tabla-fon         ‚Üí Phoneme comparison table
--
-- HIERARCHICAL DOCUMENTATION PRINCIPLES:
-- 1. Start with executive summary/high-level overview
-- 2. Use tables for quick scanning at the top
-- 3. Break into major categories (Meetings, Cases, Projects, etc.)
-- 4. Drill down into detailed sections with subsections
-- 5. Include technical details and code at the deepest level
-- 6. Maintain consistent 4-space indentation for hierarchy
-- 7. Use status emojis (‚úÖ ‚ùå ‚ö†Ô∏è üîÑ ‚è≥ üö´)
-- 8. Structure pattern: Summary ‚Üí Categories ‚Üí Details ‚Üí Technical
-- 9. End with cross-references and knowledge base entries
--
-- HOW TO USE:
-- 1. Type trigger word in markdown file
-- 2. Press Tab to expand
-- 3. Tab through placeholders
-- 4. Ctrl+E on choice nodes to cycle options
-- 5. Shift+Tab to go back
--
-- AUTOCOMPLETE:
-- - Shows as [Snippet] or [LuaSnip] in completion menu
-- - Snippets appear alongside LSP/buffer suggestions
-- - Filter by typing: "worklog" shows hierarchical work log
--
-- ============================================================================
